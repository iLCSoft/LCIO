// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef EVENT_LCIO_H
#define EVENT_LCIO_H 1

namespace EVENT {


#define LCIO_MAJOR_VERSION 2
#define LCIO_MINOR_VERSION 9
#define LCIO_PATCH_LEVEL  0

#define LCIO_VERSION_GE( MAJV , MINV )  ( (  LCIO_MAJOR_VERSION  > MAJV ) || ( (LCIO_MAJOR_VERSION==MAJV) && ( LCIO_MINOR_VERSION >= MINV ) ) )

#define LCIO_PATCHVERSION_GE( MAJV , MINV , PLEV)  ( (  LCIO_MAJOR_VERSION  > MAJV ) ||   ( (LCIO_MAJOR_VERSION==MAJV) && ( LCIO_MINOR_VERSION > MINV ) ) ||   ( (LCIO_MAJOR_VERSION==MAJV) && ( LCIO_MINOR_VERSION == MINV ) && ( LCIO_PATCH_LEVEL >= PLEV ) ) )

/** Global constants used in LCIO.
 *
 * @author gaede
 * @version $Id: LCIO.aid,v 1.77 2010-10-29 10:26:09 gaede Exp $
 * @see LCObject
 * @see LCIO
 */
class LCIO {

public: 
    /// Destructor.
    virtual ~LCIO() { /* nop */; }

    // it seems to be impossible to have one declaration for
    // static constants in Java and C++ - so we need to define
    // the same constants twice !!

  public:
    // current version number of lcio
    static const int MAJORVERSION  = LCIO_MAJOR_VERSION ;
    static const int MINORVERSION  = LCIO_MINOR_VERSION ;

    // bits in flag words
    // SimCalorimeterHit (CH)
    static const int CHBIT_LONG   = 31; // long(1) - short(0), (position)
    static const int CHBIT_BARREL = 30 ;  // barrel(1) - endcap(0)
    static const int CHBIT_ID1    = 29 ;  // cellid1 stored
    static const int CHBIT_PDG    = 28 ;   // PDG(1) - no PDG(0) (detailed shower contributions) // DEPRECATED use: CHBIT_STEP
    static const int CHBIT_STEP   = 28 ;   // detailed shower contributions 

    // (raw) calorimeter hit
    static const int RCHBIT_LONG   = 31 ;  // long(1) - short(0) , incl./excl. position
    static const int RCHBIT_BARREL = 30 ;  // barrel(1) - endcap(0)
    static const int RCHBIT_ID1    = 29 ;  // cellid1 stored
    static const int RCHBIT_NO_PTR = 28 ; // 1: pointer tag not added
    static const int RCHBIT_TIME   = 27 ; // 1: time information stored
    static const int RCHBIT_ENERGY_ERROR  = 26 ;   // 1: store energy error

    // raw tracker data (pulses)
    static const int TRAWBIT_ID1   = 31 ;  //  cellid1 stored
    static const int TRAWBIT_CM    = 30 ;  //  cov matrix stored(1) - not stored(0)

    // raw tracker hit
    static const int RTHBIT_ID1     = 31 ;  //  cellid1 stored

    // TrackerHitPlane
    static const int RTHPBIT_ID1      = 31 ; // cellid1 stored

    // TrackerHitZCylinder
    static const int RTHZBIT_ID1      = 31 ; // cellid1 stored

    // SimTrackerHit
    static const int THBIT_BARREL   = 31 ; // barrel(1) - endcap(0)
    static const int THBIT_MOMENTUM = 30 ; // momentum of particle stored(1) - not stored(0)
    static const int THBIT_ID1      = 29 ; // cellid1 stored

    // Tracks
    static const int TRBIT_HITS = 31 ; // hits stored(1) - not stored(0)

    // Cluster
    static const int CLBIT_HITS = 31 ; // hits stored(1) - not stored(0)

    // TPCHit
    static const int TPCBIT_RAW = 31 ; // raw data stored(1) - not stored(0)
    static const int TPCBIT_NO_PTR = 30 ; // 1: pointer tag not added (needed for TrackerHit)


    // LCRelation
    //    static const int LCREL_ONE2MANY = 31 ; // relation is one to many
    static const int LCREL_WEIGHTED = 31 ; // relations has weights


    // LCGenericObject
    static const int GOBIT_FIXED = 31 ; // is fixed size

    static const int READ_ONLY =  0 ;
    static const int UPDATE   =  1 ;
    // error handling
    static const int ERROR   =  0 ;
    static const int SUCCESS =  1 ;

    //write modes
    static const int WRITE_NEW = 0 ;
    static const int WRITE_APPEND = 1 ;

    // type names:
    static const char* LCEVENT ;
    static const char* LCRUNHEADER ;
    static const char* LCCOLLECTION ;
    static const char* MCPARTICLE ;
    static const char* SIMCALORIMETERHIT ;
    static const char* RAWCALORIMETERHIT ;
    static const char* CALORIMETERHIT ;
    static const char* SIMTRACKERHIT ;
    static const char* TPCHIT ;
    static const char* TRACKERRAWDATA ;
    static const char* TRACKERDATA ;
    static const char* TRACKERPULSE ;
    static const char* TRACKERHIT ;
    static const char* TRACKERHITPLANE ;
    static const char* TRACKERHITZCYLINDER ;
    static const char* LCSTRVEC ;
    static const char* LCFLOATVEC ;
    static const char* LCINTVEC ;
    static const char* TRACK ;
    static const char* TRACKSTATE ;
    static const char* CLUSTER ;
    static const char* RECONSTRUCTEDPARTICLE ;
    static const char* LCRELATION ;
    static const char* LCGENERICOBJECT ;
    static const char* PARTICLEID;
    static const char* VERTEX;

    // reserved names, e.g. name of event/collections paramaters

    static const char* CellIDEncoding ;
}; // class
} // namespace EVENT
#endif /* ifndef EVENT_LCIO_H */

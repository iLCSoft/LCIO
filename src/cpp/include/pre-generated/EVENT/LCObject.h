// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef EVENT_LCOBJECT_H
#define EVENT_LCOBJECT_H 1

#include "LCRTRelations.h"

#include <vector>

namespace EVENT {


class LCObject ;
/**Vector of (pointers to) LCObjects.*/
typedef std::vector<LCObject*> LCObjectVec ;
using namespace lcrtrel ;
/** The generic object that is held in an LCCollection. 
 *  Every object stored in an LCCollection, i.e. in an LCEvent has to 
 *  implement this interface.
 * 
 * @author gaede 
 * @version Jun 7, 2003
 * fg 20040405 moved here from hep.lcio.data
 */
    
class LCObject : public LCRTRelations {

public: 
    /// Destructor.
    virtual ~LCObject() = default;

    /** Returns an object id for internal (debugging) use in LCIO.
     */
    virtual int id() const = 0;

//           
// public interface LCObject extends Cloneable, LCRTRelations{
//     /** Returns an object id for internal (debugging) use in LCIO.
//      */
//     public int id() const ;
//      

    /** Deep copy of the object. C++ implementations should return the 
     *  concrete type (virtual constructor). No reasonable implementation yet.
     *  Do not use this method.
     */
    public:
	 virtual LCObject* clone() const {  return 0 ; } 
}; // class
} // namespace EVENT
#endif /* ifndef EVENT_LCOBJECT_H */
